name: main ci
on:
  push:
    branches:
      - main
jobs:
  ios:
    name: flutter ios build
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - run: flutter pub get
    - run: flutter analyze
    - run: flutter test
    - run: flutter build ipa --release
    - run: mkdir Payload
    - run: mv build/ios/archive/Runner.xcarchive/Products/Applications/Runner.app ./Payload
    - run: zip -r Payload.zip Payload
    - run: mv Payload.zip louZero.ipa
    - uses: actions/upload-artifact@v2
      with:
        name: louzero-ios
        path: louZero.ipa
  android:
    name: flutter apk build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - run: flutter pub get
    - run: flutter analyze
    - run: flutter test
    - run: flutter build apk --release
    - name: Build Signed APK
      uses: victorbnl/build-signed-apk@main
      with:
        keystore: ${{ secrets.APK_KEYSTORE_BASE64 }}
        keystore_password: ${{ secrets.APK_KEYSTORE_PASSWORD }}
        key_alias: ${{ secrets.APK_KEY_ALIAS }}
        key_password: ${{ secrets.APK_KEY_PASSWORD }}
    - uses: wzieba/Firebase-Distribution-Github-Action@v1.0.0
      with:
        appId: ${{secrets.FIREBASE_ANDROID_APPID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        groups: Testers
        file: build/app/outputs/flutter-apk/app-release.apk
    - uses: actions/upload-artifact@v2
      with:
        name: louZero.apk
        path: build/app/outputs/flutter-apk/app-release.apk
  distribute-apk:
    name: Distribute android build
    runs-on: ubuntu-latest  
    needs: android
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: louZero.apk
    - name: Display structure of downloaded files
      run: ls 
  distribute-ios:
    name: Distribute ios build
    runs-on: ubuntu-latest  
    needs: ios
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: louzero-ios
    - name: Display structure of downloaded files
      run: ls -R
    - uses: wzieba/Firebase-Distribution-Github-Action@v1.0.0
      with:
        appId: ${{secrets.FIREBASE_APPLE_APPID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        groups: Testers
        file: louZero.ipa